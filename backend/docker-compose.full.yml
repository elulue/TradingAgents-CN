# 完整的 TradingAgents 后端系统
version: '3.8'

services:
  # Redis 缓存服务
  redis:
    image: docker.m.daocloud.io/library/redis:7-alpine
    container_name: tradingagents-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - tradingagents-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MongoDB 主数据库
  mongodb:
    image: docker.m.daocloud.io/library/mongo:7
    container_name: tradingagents-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=tradingagents123
      - MONGO_INITDB_DATABASE=tradingagents
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - tradingagents-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.hello()"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MinIO 对象存储
  minio:
    image: docker.m.daocloud.io/minio/minio:latest
    container_name: tradingagents-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=tradingagents123
    volumes:
      - minio_data:/data
    networks:
      - tradingagents-network
    command: server /data --console-address ":9001"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Data Service - 数据服务
  data-service:
    build:
      context: ./data-service
      dockerfile: Dockerfile.simple
    container_name: tradingagents-data-service
    ports:
      - "8002:8002"
    environment:
      - PYTHONPATH=/app:/app/backend
      - MONGODB_URL=mongodb://admin:tradingagents123@mongodb:27017/tradingagents?authSource=admin
      - REDIS_URL=redis://redis:6379
    env_file:
      - .env
    volumes:
      - ../backend:/app/backend:ro
      - ../:/app/project:ro
    networks:
      - tradingagents-network
    depends_on:
      - mongodb
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Analysis Engine - 分析引擎
  analysis-engine:
    build:
      context: ./analysis-engine
      dockerfile: Dockerfile
    container_name: tradingagents-analysis-engine
    ports:
      - "8001:8001"
    environment:
      - PYTHONPATH=/app
      - MONGODB_URL=mongodb://admin:tradingagents123@mongodb:27017/tradingagents?authSource=admin
      - REDIS_URL=redis://redis:6379
      - DATA_SERVICE_URL=http://data-service:8002
    env_file:
      - .env
    volumes:
      - ../:/app/project:ro
    networks:
      - tradingagents-network
    depends_on:
      - mongodb
      - redis
      - data-service
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Gateway - 统一入口
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: tradingagents-api-gateway
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - MONGODB_URL=mongodb://admin:tradingagents123@mongodb:27017/tradingagents?authSource=admin
      - REDIS_URL=redis://redis:6379
      - ANALYSIS_ENGINE_URL=http://analysis-engine:8001
      - DATA_SERVICE_URL=http://data-service:8002
    env_file:
      - .env
    volumes:
      - ../:/app/project:ro
    networks:
      - tradingagents-network
    depends_on:
      - mongodb
      - redis
      - analysis-engine
      - data-service
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local

networks:
  tradingagents-network:
    driver: bridge
